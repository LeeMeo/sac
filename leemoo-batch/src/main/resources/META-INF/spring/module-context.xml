<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="
	http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<description>Example job to get you started. It provides a skeleton for a typical batch application.</description>
 	<batch:job id="job1">
		<batch:step id="getCompany" next="getEmployee">
			<batch:tasklet start-limit="100" >
				<batch:chunk reader="companyService" writer="companyService" commit-interval="1" />
			</batch:tasklet>
		</batch:step>
		<batch:step id="getEmployee" next="getPhoto">
			<batch:tasklet transaction-manager="transactionManager" start-limit="100" >
				<batch:chunk reader="employeeService" writer="employeeService" commit-interval="1" />
			</batch:tasklet>
		</batch:step>
		<batch:step id="getPhoto">
			<batch:tasklet transaction-manager="transactionManager" start-limit="100" >
				<batch:chunk reader="photoService" writer="photoService" commit-interval="1" />
			</batch:tasklet>
		</batch:step>
	</batch:job>
	<!-- 
	<batch:job id="sac-employee-job">
		<batch:step id="step1">
			<batch:tasklet transaction-manager="transactionManager" start-limit="100" >
				<batch:chunk reader="employeeReader" writer="employeeWriter" commit-interval="1" />
			</batch:tasklet>
		</batch:step>
	</batch:job>-->
</beans>
